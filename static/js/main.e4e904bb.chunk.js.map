{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlfor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e4e904bb.chunk.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li> */}\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlfor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable DarkMode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"Set About here\",\r\n};\r\n","import React, {useState} from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = ()=>{\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted to uppercase\",\"success\");\r\n  }\r\n  const handleLoClick = ()=>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted to lowercase\",\"success\");\r\n\r\n  }\r\n  const handleCopy = ()=>{\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to clipboard\",\"success\");\r\n  }\r\n\r\n  const handleExtraSpaces = ()=>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces removed\",\"success\");\r\n  }\r\n  const handleClearClick = ()=>{\r\n    let newText = '';\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared\",\"success\");\r\n\r\n  }\r\n  const handleonChange = (event)=>{\r\n    setText(event.target.value)\r\n  }\r\n  const [text, setText] = useState('Enter text here');\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleonChange} style={{backgroundColor: props.mode==='dark'?'gray':'light', color: props.mode==='dark'?'white':'#042743'}} \r\n        id=\"myBox\"  rows=\"5\"></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert To uppercase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert To lowercase</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove extra spaces</button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n    </div>\r\n\r\n    <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n      <h2>Your text summary</h2>\r\n      <p>{text.split(\" \").length} words {text.length} characters</p>\r\n         <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h3>Preview</h3>\r\n      <p>{text.length>0?text:'Enter something in textbox above to preview it here'}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\nimport React, { useState } from 'react';\nimport Alert from \"./components/Alert\";\n// import{\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// }from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //dark mode enable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n  })\n  setTimeout(()=>{\n    setAlert(null);\n  }, 1500);\n}\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",\"success\");\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title= \"TextUtils\" aboutText= \"About\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className= \"container my-3\">\n      {/* <Switch> */}\n        {/*  /users----> component-1\n        /users/home--->---->-component-2  */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          {/* </Route>\n        </Switch> */}\n        </div>\n    {/* </Router> */}\n      \n      {/*<TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode}/> */}\n      \n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}